UART IP Core Specification
==========================

Revision 0.6.1

Jacob Gorban - gorban@opencores.org

w/ some updates by Luke E. McKay

Introduction
------------

The UART (Universal Asynchronous Receiver/Transmitter) core provides
serial communication capabilities, which allow communication with modem
or other external devices, like another computer using a serial cable
and RS232 protocol. This core is designed to be maximally compatible
with the industry standard National Semiconductors' 16550A device.

**Features:**

#. WISHBONE interface in 32-bit or 8-bit data bus modes (selectable)

#. FIFO only operation

#. Register level and functionality compatibility with NS16550A (but not
   16450).

#. Debug Interface in 32-bit data bus mode.

IO ports
--------

WISHBONE interface signals
^^^^^^^^^^^^^^^^^^^^^^^^^^

+---------------+-----------+-------------+---------------------------------+
| Port          | Width     | Direction   | Description                     |
+---------------+-----------+-------------+---------------------------------+
| CLK           | 1         | Input       | Block's clock input             |
+---------------+-----------+-------------+---------------------------------+
| WB\_RST\_I    | 1         | Input       | Asynchronous Reset              |
+---------------+-----------+-------------+---------------------------------+
| WB\_ADDR\_I   | 5 or 3    | Input       | Used for register selection     |
+---------------+-----------+-------------+---------------------------------+
| WB\_SEL\_I    | 4         | Input       | Select signal                   |
+---------------+-----------+-------------+---------------------------------+
| WB\_DAT\_I    | 32 or 8   | Input       | Data input                      |
+---------------+-----------+-------------+---------------------------------+
| WB\_DAT\_O    | 32 or 8   | Output      | Data output                     |
+---------------+-----------+-------------+---------------------------------+
| WB\_WE\_I     | 1         | Input       | Write or read cycle selection   |
+---------------+-----------+-------------+---------------------------------+
| WB\_STB\_I    | 1         | Input       | Specifies transfer cycle        |
+---------------+-----------+-------------+---------------------------------+
| WB\_CYC\_I    | 1         | Input       | A bus cycle is in progress      |
+---------------+-----------+-------------+---------------------------------+
| WB\_ACK\_O    | 1         | Output      | Acknowledge of a transfer       |
+---------------+-----------+-------------+---------------------------------+

Other internal signals
^^^^^^^^^^^^^^^^^^^^^^

+-----------+---------+-------------+-----------------------------------------------------------+
| Port      | Width   | Direction   | Description                                               |
+-----------+---------+-------------+-----------------------------------------------------------+
| INT\_O    | 1       | Output      | Interrupt output                                          |
+-----------+---------+-------------+-----------------------------------------------------------+
| BAUD\_O   | 1       | Output      | Optional baud rate output signal.                         |
|           |         |             |                                                           |
|           |         |             | The signal here is the 16 x actual baud rate.             |
|           |         |             |                                                           |
|           |         |             | It is enabled if UART\_HAS\_BAUDRATE\_OUTPUT is defined   |
+-----------+---------+-------------+-----------------------------------------------------------+

External (off-chip) connections
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

+---------------+---------+-------------+----------------------------+
| Port          | Width   | Direction   | Description                |
+---------------+---------+-------------+----------------------------+
| STX\_PAD\_O   | 1       | Output      | The serial output signal   |
+---------------+---------+-------------+----------------------------+
| SRX\_PAD\_I   | 1       | Input       | The serial input signal    |
+---------------+---------+-------------+----------------------------+
| RTS\_PAD\_O   | 1       | Output      | Request To Send            |
+---------------+---------+-------------+----------------------------+
| DTR\_PAD\_O   | 1       | Output      | Data Terminal Ready        |
+---------------+---------+-------------+----------------------------+
| CTS\_PAD\_I   | 1       | Input       | Clear To Send              |
+---------------+---------+-------------+----------------------------+
| DSR\_PAD\_I   | 1       | Input       | Data Set Ready             |
+---------------+---------+-------------+----------------------------+
| RI\_PAD\_I    | 1       | Input       | Ring Indicator             |
+---------------+---------+-------------+----------------------------+
| DCD\_PAD\_I   | 1       | Input       | Data Carrier Detect        |
+---------------+---------+-------------+----------------------------+

Clocks
------

Clocks table:

+--------+----------------+------------------------+-------------------------+--------------+------------------+
| Name   | Source         | Rates (MHz)            | Description             |              |                  |
+--------+----------------+------------------------+-------------------------+--------------+------------------+
|        |                | Max                    | Min                     | Resolution   |                  |
+--------+----------------+------------------------+-------------------------+--------------+------------------+
| clk    | WISHBONE bus   | 1258Mhz for 1200 bps   | 3.6864 for 115200 bps   |              | WISHBONE clock   |
+--------+----------------+------------------------+-------------------------+--------------+------------------+

Registers
---------

Registers list:

+---------------------------------------------------------------------------+-----------+---------+----------+------------------------------------------------+
| Name                                                                      | Address   | Width   | Access   | Description                                    |
+---------------------------------------------------------------------------+-----------+---------+----------+------------------------------------------------+
| Receiver Buffer                                                           | 0         | 8       | R        | Receiver FIFO output                           |
+---------------------------------------------------------------------------+-----------+---------+----------+------------------------------------------------+
| Transmitter Holding Register (THR)                                        | 0         | 8       | W        | Transmit FIFO input                            |
+---------------------------------------------------------------------------+-----------+---------+----------+------------------------------------------------+
| `*Interrupt Enable* <#interrupt-enable-register-ier>`__                   | 1         | 8       | RW       | Enable/Mask interrupts generated by the UART   |
+---------------------------------------------------------------------------+-----------+---------+----------+------------------------------------------------+
| `*Interrupt Identification* <#interrupt-identification-register-iir>`__   | 2         | 8       | R        | Get interrupt information                      |
+---------------------------------------------------------------------------+-----------+---------+----------+------------------------------------------------+
| `*FIFO Control* <#fifo-control-register-fcr>`__                           | 2         | 8       | W        | Control FIFO options                           |
+---------------------------------------------------------------------------+-----------+---------+----------+------------------------------------------------+
| `*Line Control Register* <#line-control-register-lcr>`__                  | 3         | 8       | RW       | Control connection                             |
+---------------------------------------------------------------------------+-----------+---------+----------+------------------------------------------------+
| `*Modem Control* <#modem-control-register-mcr>`__                         | 4         | 8       | W        | Controls modem                                 |
+---------------------------------------------------------------------------+-----------+---------+----------+------------------------------------------------+
| `*Line Status* <#line-status-register-lsr>`__                             | 5         | 8       | R        | Status information                             |
+---------------------------------------------------------------------------+-----------+---------+----------+------------------------------------------------+
| `*Modem Status* <#modem-status-register-msr>`__                           | 6         | 8       | R        | Modem Status                                   |
+---------------------------------------------------------------------------+-----------+---------+----------+------------------------------------------------+

In addition, there are 2 Clock Divisor registers that together form one
16-bit.

The registers can be accessed when the 7\ :sup:`th` (DLAB) bit of the
Line Control Register is set to '1'. At this time the above registers at
addresses 0-1 can't be accessed.

+-------------------------------------------------------+-----------+---------+----------+--------------------------------+
| Name                                                  | Address   | Width   | Access   | Description                    |
+-------------------------------------------------------+-----------+---------+----------+--------------------------------+
| `*Divisor Latch* <#divisor-latches>`__ Byte 1 (LSB)   | 0         | 8       | RW       | The LSB of the divisor latch   |
+-------------------------------------------------------+-----------+---------+----------+--------------------------------+
| Divisor Latch Byte 2                                  | 1         | 8       | RW       | The MSB of the divisor latch   |
+-------------------------------------------------------+-----------+---------+----------+--------------------------------+

When using 32-bit data bus interface, additional read-only registers are
available for debug purposes:

+---------------------------+-----------+---------+----------+-------------------------+
| Name                      | Address   | Width   | Access   | Description             |
+---------------------------+-----------+---------+----------+-------------------------+
| `*Debug 1* <#debug1>`__   | 8         | 32      | R        | First debug register    |
+---------------------------+-----------+---------+----------+-------------------------+
| `*Debug 2* <#debug2>`__   | 12        | 32      | R        | Second debug register   |
+---------------------------+-----------+---------+----------+-------------------------+

Interrupt Enable Register (IER)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

This register allows enabling and disabling interrupt generation by the
UART.

+---------+----------+------------------------------------------------+
| Bit #   | Access   | Description                                    |
+---------+----------+------------------------------------------------+
| 0       | RW       | Received Data available interrupt              |
|         |          |                                                |
|         |          | '0' - disabled                                 |
|         |          |                                                |
|         |          | '1' - enabled                                  |
+---------+----------+------------------------------------------------+
| 1       | RW       | Transmitter Holding Register empty interrupt   |
|         |          |                                                |
|         |          | '0' - disabled                                 |
|         |          |                                                |
|         |          | '1' - enabled                                  |
+---------+----------+------------------------------------------------+
| 2       | RW       | Receiver Line Status Interrupt                 |
|         |          |                                                |
|         |          | '0' - disabled                                 |
|         |          |                                                |
|         |          | '1' - enabled                                  |
+---------+----------+------------------------------------------------+
| 3       | RW       | Modem Status Interrupt                         |
|         |          |                                                |
|         |          | '0' - disabled                                 |
|         |          |                                                |
|         |          | '1' - enabled                                  |
+---------+----------+------------------------------------------------+
| 7-4     | RW       | Reserved. Should be logic '0'.                 |
+---------+----------+------------------------------------------------+

Reset Value: 00h

Interrupt Identification Register (IIR)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

The IIR enables the programmer to retrieve what is the current highest
priority pending interrupt.

**Bit 0** indicates that an interrupt is pending when it's logic '0'.
When it's '1' - no interrupt is pending.

The following table displays the list of possible interrupts along with
the bits they enable, priority, and their source and reset control.

+-----------------+-----------------+-----------------+--------------------+--------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------+---------------------------------------------------------------+
|     **Bit 3**   |     **Bit 2**   |     **Bit 1**   |     **Priority**   | **Interrupt Type**                   | **Interrupt Source**                                                                                                              | **Interrupt Reset Control**                                   |
+-----------------+-----------------+-----------------+--------------------+--------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------+---------------------------------------------------------------+
| 0               | 1               | 1               | 1\ :sup:`st`       | Receiver Line Status                 | Parity, Overrun or Framing errors or Break Interrupt                                                                              | Reading the Line Status Register                              |
+-----------------+-----------------+-----------------+--------------------+--------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------+---------------------------------------------------------------+
| 0               | 1               | 0               | 2\ :sup:`nd`       | Receiver Data available              | FIFO trigger level reached                                                                                                        | FIFO drops below trigger level                                |
+-----------------+-----------------+-----------------+--------------------+--------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------+---------------------------------------------------------------+
| 1               | 1               | 0               | 2\ :sup:`nd`       | Timeout Indication                   | There's at least 1 character in the FIFO but no character has been input to the FIFO or read from it for the last 4 Char times.   | Reading from the FIFO (Receiver Buffer Register)              |
+-----------------+-----------------+-----------------+--------------------+--------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------+---------------------------------------------------------------+
| 0               | 0               | 1               | 3\ :sup:`rd`       | Transmitter Holding Register empty   | Transmitter Holding Register Empty                                                                                                | Writing to the Transmitter Holding Register or reading IIR.   |
+-----------------+-----------------+-----------------+--------------------+--------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------+---------------------------------------------------------------+
| 0               | 0               | 0               | 4\ :sup:`th`       | Modem Status                         | CTS, DSR, RI or DCD.                                                                                                              | Reading the Modem status register.                            |
+-----------------+-----------------+-----------------+--------------------+--------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------+---------------------------------------------------------------+

**Bits 4 and 5**: Logic '0'.

**Bits 6 and 7**: Logic '1' for compatibility reason.

Reset Value: C1h

FIFO Control Register (FCR)
^^^^^^^^^^^^^^^^^^^^^^^^^^^

The FCR allows selection of the FIFO trigger level (the number of bytes
in FIFO required to enable the Received Data Available interrupt). In
addition, the FIFOs can be cleared using this register.

+---------+----------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Bit #   | Access   | Description                                                                                                                                                         |
+---------+----------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 0       | W        | Ignored (Used to enable FIFOs in NS16550D). Since this UART only supports FIFO mode, this bit is ignored.                                                           |
+---------+----------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 1       | W        | Writing a '1' to bit 1 clears the Receiver FIFO and resets its logic. But it doesn't clear the shift register, i.e. receiving of the current character continues.   |
+---------+----------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 2       | W        | Writing a '1' to bit 2 clears the Transmitter FIFO and resets its logic. The shift register is not cleared, i.e. transmitting of the current character continues.   |
+---------+----------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 5-3     | W        | Ignored                                                                                                                                                             |
+---------+----------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 7-6     | W        | Define the Receiver FIFO Interrupt trigger level                                                                                                                    |
|         |          |                                                                                                                                                                     |
|         |          | '00' - 1 byte                                                                                                                                                       |
|         |          |                                                                                                                                                                     |
|         |          | '01' - 4 bytes                                                                                                                                                      |
|         |          |                                                                                                                                                                     |
|         |          | '10' - 8 bytes                                                                                                                                                      |
|         |          |                                                                                                                                                                     |
|         |          | '11' - 14 bytes                                                                                                                                                     |
+---------+----------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------+

Reset Value : 11000000b

Line Control Register (LCR)
^^^^^^^^^^^^^^^^^^^^^^^^^^^

The line control register allows the specification of the format of the
asynchronous data communication used. A bit in the register also allows
access to the Divisor Latches, which define the baud rate. Reading from
the register is allowed to check the current settings of the
communication.

+---------+----------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Bit #   | Access   | Description                                                                                                                                                                            |
+---------+----------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 1-0     | RW       | Select number of bits in each character                                                                                                                                                |
|         |          |                                                                                                                                                                                        |
|         |          | '00' - 5 bits                                                                                                                                                                          |
|         |          |                                                                                                                                                                                        |
|         |          | '01' - 6 bits                                                                                                                                                                          |
|         |          |                                                                                                                                                                                        |
|         |          | '10' - 7 bits                                                                                                                                                                          |
|         |          |                                                                                                                                                                                        |
|         |          | '11' - 8 bits                                                                                                                                                                          |
+---------+----------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 2       | RW       | Specify the number of generated stop bits                                                                                                                                              |
|         |          |                                                                                                                                                                                        |
|         |          | '0' - 1 stop bit                                                                                                                                                                       |
|         |          |                                                                                                                                                                                        |
|         |          | '1' - 1.5 stop bits when 5-bit character length selected and                                                                                                                           |
|         |          |                                                                                                                                                                                        |
|         |          | 2 bits otherwise                                                                                                                                                                       |
|         |          |                                                                                                                                                                                        |
|         |          | Note that the receiver always checks the first stop bit only.                                                                                                                          |
+---------+----------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 3       | RW       | Parity Enable                                                                                                                                                                          |
|         |          |                                                                                                                                                                                        |
|         |          | '0' - No parity                                                                                                                                                                        |
|         |          |                                                                                                                                                                                        |
|         |          | '1' - Parity bit is generated on each outgoing character and is checked on each incoming one.                                                                                          |
+---------+----------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 4       | RW       | Even Parity select                                                                                                                                                                     |
|         |          |                                                                                                                                                                                        |
|         |          | '0' - Odd number of '1' is transmitted and checked in each word (data and parity combined). In other words, if the data has an even number of '1' in it, then the parity bit is '1'.   |
|         |          |                                                                                                                                                                                        |
|         |          | '1' - Even number of '1' is transmitted in each word.                                                                                                                                  |
+---------+----------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 5       | RW       | Stick Parity bit.                                                                                                                                                                      |
|         |          |                                                                                                                                                                                        |
|         |          | '0' - Stick Parity disabled                                                                                                                                                            |
|         |          |                                                                                                                                                                                        |
|         |          | '1' - If bits 3 and 4 are logic '1', the parity bit is transmitted and checked as logic '0'. If bit 3 is '1' and bit 4 is '0' then the parity bit is transmitted and checked as '1'.   |
+---------+----------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 6       | RW       | Break Control bit                                                                                                                                                                      |
|         |          |                                                                                                                                                                                        |
|         |          | '1' - the serial out is forced into logic '0' (break state).                                                                                                                           |
|         |          |                                                                                                                                                                                        |
|         |          | '0' - break is disabled                                                                                                                                                                |
+---------+----------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 7       | RW       | Divisor Latch Access bit.                                                                                                                                                              |
|         |          |                                                                                                                                                                                        |
|         |          | '1' - The divisor latches can be accessed                                                                                                                                              |
|         |          |                                                                                                                                                                                        |
|         |          | '0' - The normal registers are accessed                                                                                                                                                |
+---------+----------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

Reset Value: 00000011b

Modem Control Register (MCR)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^

The modem control register allows transferring control signals to a
modem connected to the UART.

+---------+----------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Bit #   | Access   | Description                                                                                                                                                                                                                 |
+---------+----------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 0       | W        | Data Terminal Ready (DTR) signal control                                                                                                                                                                                    |
|         |          |                                                                                                                                                                                                                             |
|         |          | '0' - DTR is '1'                                                                                                                                                                                                            |
|         |          |                                                                                                                                                                                                                             |
|         |          | '1' - DTR is '0'                                                                                                                                                                                                            |
+---------+----------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 1       | W        | Request To Send (RTS) signal control                                                                                                                                                                                        |
|         |          |                                                                                                                                                                                                                             |
|         |          | '0' - RTS is '1'                                                                                                                                                                                                            |
|         |          |                                                                                                                                                                                                                             |
|         |          | '1' - RTS is '0'                                                                                                                                                                                                            |
+---------+----------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 2       | W        | Out1. In loopback mode, connected Ring Indicator (RI) signal input                                                                                                                                                          |
+---------+----------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 3       | W        | Out2. In loopback mode, connected to Data Carrier Detect (DCD) input.                                                                                                                                                       |
+---------+----------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 4       | W        | Loopback mode                                                                                                                                                                                                               |
|         |          |                                                                                                                                                                                                                             |
|         |          | '0' - normal operation                                                                                                                                                                                                      |
|         |          |                                                                                                                                                                                                                             |
|         |          | '1' - loopback mode. When in loopback mode, the Serial Output Signal (STX\_PAD\_O) is set to logic '1'. The signal of the transmitter shift register is internally connected to the input of the receiver shift register.   |
|         |          |                                                                                                                                                                                                                             |
|         |          | The following connections are made:                                                                                                                                                                                         |
|         |          |                                                                                                                                                                                                                             |
|         |          | DTR -> DSR                                                                                                                                                                                                                  |
|         |          |                                                                                                                                                                                                                             |
|         |          | RTS -> CTS                                                                                                                                                                                                                  |
|         |          |                                                                                                                                                                                                                             |
|         |          | Out1 -> RI                                                                                                                                                                                                                  |
|         |          |                                                                                                                                                                                                                             |
|         |          | Out2 -> DCD                                                                                                                                                                                                                 |
+---------+----------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 7-5     | W        | Ignored                                                                                                                                                                                                                     |
+---------+----------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

Reset Value: 0

Line Status Register (LSR)
^^^^^^^^^^^^^^^^^^^^^^^^^^

+---------+----------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Bit #   | Access   | Description                                                                                                                                                                                                                                                                                                                                                                                                 |
+---------+----------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 0       | R        | Data Ready (DR) indicator.                                                                                                                                                                                                                                                                                                                                                                                  |
|         |          |                                                                                                                                                                                                                                                                                                                                                                                                             |
|         |          | '0' - No characters in the FIFO                                                                                                                                                                                                                                                                                                                                                                             |
|         |          |                                                                                                                                                                                                                                                                                                                                                                                                             |
|         |          | '1' - At least one character has been received and is in the FIFO.                                                                                                                                                                                                                                                                                                                                          |
+---------+----------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 1       | R        | Overrun Error (OE) indicator                                                                                                                                                                                                                                                                                                                                                                                |
|         |          |                                                                                                                                                                                                                                                                                                                                                                                                             |
|         |          | '1' - If the FIFO is full and another character has been received in the receiver shift register. If another character is starting to arrive, it will overwrite the data in the shift register but the FIFO will remain intact. The bit is cleared upon reading from the register. Generates Receiver Line Status interrupt.                                                                                |
|         |          |                                                                                                                                                                                                                                                                                                                                                                                                             |
|         |          | '0' - No overrun state                                                                                                                                                                                                                                                                                                                                                                                      |
+---------+----------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 2       | R        | Parity Error (PE) indicator                                                                                                                                                                                                                                                                                                                                                                                 |
|         |          |                                                                                                                                                                                                                                                                                                                                                                                                             |
|         |          | '1' - The character that is currently at the top of the FIFO has been received with parity error. The bit is cleared upon reading from the register. Generates Receiver Line Status interrupt.                                                                                                                                                                                                              |
|         |          |                                                                                                                                                                                                                                                                                                                                                                                                             |
|         |          | '0' - No parity error in the current character                                                                                                                                                                                                                                                                                                                                                              |
+---------+----------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 3       | R        | Framing Error (FE) indicator                                                                                                                                                                                                                                                                                                                                                                                |
|         |          |                                                                                                                                                                                                                                                                                                                                                                                                             |
|         |          | '1' - The received character at the top of the FIFO did not have a valid stop bit. Of course, generally, it might be that all the following data is corrupt. The bit is cleared upon reading from the register. Generates Receiver Line Status interrupt.                                                                                                                                                   |
|         |          |                                                                                                                                                                                                                                                                                                                                                                                                             |
|         |          | '0' - No framing error in the current character                                                                                                                                                                                                                                                                                                                                                             |
+---------+----------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 4       | R        | Break Interrupt (BI) indicator                                                                                                                                                                                                                                                                                                                                                                              |
|         |          |                                                                                                                                                                                                                                                                                                                                                                                                             |
|         |          | '1' -A break condition has been reached in the current character. The break occurs when the line is held in logic 0 for a time of one character (start bit + data + parity + stop bit). In that case, one zero character enters the FIFO and the UART waits for a valid start bit to receive next character. The bit is cleared upon reading from the register. Generates Receiver Line Status interrupt.   |
|         |          |                                                                                                                                                                                                                                                                                                                                                                                                             |
|         |          | '0' - No break condition in the current character                                                                                                                                                                                                                                                                                                                                                           |
+---------+----------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 5       | R        | Transmit FIFO is empty.                                                                                                                                                                                                                                                                                                                                                                                     |
|         |          |                                                                                                                                                                                                                                                                                                                                                                                                             |
|         |          | '1' - The transmitter FIFO is empty. Generates Transmitter Holding Register Empty interrupt. The bit is cleared when data is being been written to the transmitter FIFO.                                                                                                                                                                                                                                    |
|         |          |                                                                                                                                                                                                                                                                                                                                                                                                             |
|         |          | '0' - Otherwise                                                                                                                                                                                                                                                                                                                                                                                             |
+---------+----------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 6       | R        | Transmitter Empty indicator.                                                                                                                                                                                                                                                                                                                                                                                |
|         |          |                                                                                                                                                                                                                                                                                                                                                                                                             |
|         |          | '1' - Both the transmitter FIFO and transmitter shift register are empty. The bit is cleared when data is being been written to the transmitter FIFO.                                                                                                                                                                                                                                                       |
|         |          |                                                                                                                                                                                                                                                                                                                                                                                                             |
|         |          | '0' - Otherwise                                                                                                                                                                                                                                                                                                                                                                                             |
+---------+----------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 7       | R        | '1' - At least one parity error, framing error or break indications have been received and are inside the FIFO. The bit is cleared upon reading from the register.                                                                                                                                                                                                                                          |
|         |          |                                                                                                                                                                                                                                                                                                                                                                                                             |
|         |          | '0' - Otherwise.                                                                                                                                                                                                                                                                                                                                                                                            |
+---------+----------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

Modem Status Register (MSR)
^^^^^^^^^^^^^^^^^^^^^^^^^^^

The register displays the current state of the modem control lines.
Also, four bits also provide an indication in the state of one of the
modem status lines. These bits are set to '1' when a change in
corresponding line has been detected and they are reset when the
register is being read.

+---------+----------+--------------------------------------------------------------------------------------------------------------+
| Bit #   | Access   | Description                                                                                                  |
+---------+----------+--------------------------------------------------------------------------------------------------------------+
| 0       | R        | Delta Clear To Send (DCTS) indicator                                                                         |
|         |          |                                                                                                              |
|         |          | '1' - The CTS line has changed its state.                                                                    |
+---------+----------+--------------------------------------------------------------------------------------------------------------+
| 1       | R        | Delta Data Set Ready (DDSR) indicator                                                                        |
|         |          |                                                                                                              |
|         |          | '1' - The DSR line has changed its state.                                                                    |
+---------+----------+--------------------------------------------------------------------------------------------------------------+
| 2       | R        | Trailing Edge of Ring Indicator (TERI) detector. The RI line has changed its state from low to high state.   |
+---------+----------+--------------------------------------------------------------------------------------------------------------+
| 3       | R        | Delta Data Carrier Detect (DDCD) indicator                                                                   |
|         |          |                                                                                                              |
|         |          | '1' - The DCD line has changed its state.                                                                    |
+---------+----------+--------------------------------------------------------------------------------------------------------------+
| 4       | R        | Complement of the CTS input or equals to RTS in loopback mode.                                               |
+---------+----------+--------------------------------------------------------------------------------------------------------------+
| 5       | R        | Complement of the DSR input or equals to DTR in loopback mode.                                               |
+---------+----------+--------------------------------------------------------------------------------------------------------------+
| 6       | R        | Complement of the RI input or equals to Out1 in loopback mode.                                               |
+---------+----------+--------------------------------------------------------------------------------------------------------------+
| 7       | R        | Complement of the DCD input or equals to Out2 in loopback mode.                                              |
+---------+----------+--------------------------------------------------------------------------------------------------------------+

Divisor Latches 
^^^^^^^^^^^^^^^

The divisor latches can be accessed by setting the 7\ :sup:`th` bit of
LCR to '1'. You should restore this bit to '0' after setting the divisor
latches in order to restore access to the other registers that occupy
the same addresses. The 2 bytes form one 16-bit register, which is
internally accessed as a single number. You should therefore set all 2
bytes of the register to ensure normal operation. The register is set to
the default value of **0 on reset**, which disables all serial I/O
operations in order to ensure explicit setup of the register in the
software. The value set should be equal to (system clock speed) / (16 x
desired baud rate).

The internal counter starts to work when the LSB of DL is written, so
when setting the divisor, write the MSB first and the LSB last.

Debug 1
^^^^^^^

This register is only available when the core has 32-bit data bus and
5-bit address bus.

It is read only and is provided for debugging purposes of chip testing
as it is not part of the original UART16550 device specifications.
Reading from the does not influence core's bahaviour.

+---------+----------+---------------------------------------------------+
| Bit #   | Access   | Description                                       |
+---------+----------+---------------------------------------------------+
| 7-0     | R        | Line Status Register value.                       |
+---------+----------+---------------------------------------------------+
| 11-8    | R        | Interrupt Enable Register value (bits 3-0).       |
+---------+----------+---------------------------------------------------+
| 15-12   | R        | Interrupt Identifier Register value (bits 3-0).   |
+---------+----------+---------------------------------------------------+
| 23-16   | R        | Line Control Register value.                      |
+---------+----------+---------------------------------------------------+
| 31-24   | R        | Modem Status Register value.                      |
+---------+----------+---------------------------------------------------+

Debug 2
^^^^^^^

This register is only available when the core has 32-bit data bus and
5-bit address bus.

It is read only and is provided for debugging purposes of chip testing
as it is not part of the original UART16550 device specifications.
Reading from the does not influence core's bahaviour.

+---------+----------+--------------------------------------------------------+
| Bit #   | Access   | Description                                            |
+---------+----------+--------------------------------------------------------+
| 2-0     | R        | Transmitter FSM state                                  |
+---------+----------+--------------------------------------------------------+
| 7-3     | R        | Number of characters in Transmitter FIFO (tf\_count)   |
+---------+----------+--------------------------------------------------------+
| 11-8    | R        | Receiver FSM state                                     |
+---------+----------+--------------------------------------------------------+
| 16-12   | R        | Number of characters in Receiver FIFO (rf\_count)      |
+---------+----------+--------------------------------------------------------+
| 18-17   | R        | Modem Control Register value (bits 4-0)                |
+---------+----------+--------------------------------------------------------+
| 23-19   | R        | FIFO Control Register value (bits 7-6)                 |
+---------+----------+--------------------------------------------------------+
| 31-24   | R        | Reserved. Returned value is 0.                         |
+---------+----------+--------------------------------------------------------+

Operation
---------

This UART core is very similar in operation to the standard 16550 UART
chip with the main exception being that only the FIFO mode is supported.
The scratch register is removed, as it serves no purpose.

This core can operate in 8-bit data bus mode or in 32-bit bus mode,
which is now the default mode.

The 32-bit mode is fully WISHBONE compatible and it uses the WISHBONE
[SEL\_I] signal to properly receive and return 8-bit data on 32-bit data
bus. The 8-bit version might have problems in various WISHBONE
implementations because a 32-bit master reading from 8-bit bus can
expect data on different bytes of the 4-byte word, depending on the
register address.

Also, in 32-bit data bus mode, the [ADR\_I] is 5 and not 3 bits wide.

In addition, in the 32-bit data bus mode a debug interface is present in
the system. This interface has 2 32-bit registers that can be read to
provide non-intrusive look into the core's registers and other internal
values of importance.

The selection between 32- and 8-bits data bus modes is performed by
defining DATA\_BUS\_WIDTH\_8 in uart\_defines.v, uart\_top.v or on the
compiler/synthesizer tool command line.

Initialization 
^^^^^^^^^^^^^^

Upon reset the core performs the following tasks:

#. The receiver and transmitter FIFOs are cleared.

#. The receiver and transmitter shift registers are cleared

#. The Divisor Latch register is set to 0.

#. The Line Control Register is set to communication of 8 bits of data,
   no parity, 1 stop bit.

#. All interrupts are disabled in the Interrupt Enable Register.

For proper operation, perform the following:

#. Set the Line Control Register to the desired line control parameters.
   Set bit 7 to '1' to allow access to the Divisor Latches.

#. Set the Divisor Latches, MSB first, LSB next.

#. Set bit 7 of LCR to '0' to disable access to Divisor Latches. At this
   time the transmission engine starts working and data can be sent and
   received.

#. Set the FIFO trigger level. Generally, higher trigger level values
   produce less interrupt to the system, so setting it to 14 bytes is
   recommended if the system responds fast enough.

#. Enable desired interrupts by setting appropriate bits in the
   Interrupt Enable register.

Remember that (Input Clock Speed)/(Divisor Latch value) = 16 x the
communication baud rate. Since the protocol is asynchronous and the
sampling of the bits is performed in the perceived middle of the bit
time, it is highly immune to small differences in the clocks of the
sending and receiving sides, yet no such assumption should be made when
calculating the Divisor Latch values.

Architecture
------------

The core implements the WISNBONE SoC bus interface for communication
with the system. It has an 8-bit data bus for compatibility reason. The
core requires one interrupt. It requires 2 pads in the chip (serial in
and serial out) and, optionally, another six modem control signals,
which can otherwise be implemented using general purpose I/Os on the
chip.

The block diagram of the core is on the following page.

.. image:: ./images/uart16550_block_diagram.*

Changes
-------

.. Note::

  This section comes from a Changes file that was noted that it was being maintained 
  since 25.5.2001.  There are several later updates that can be found in the
  repository history, so this section is out of date.

29.07.2002
^^^^^^^^^^

Reverted to have uart_defines.v file to be included in the verilog
files. It seems that it's been a bad idea in the first place.

22.07.2002
^^^^^^^^^^

Notice that this file hasn't been updated for a while so not all changed are present.

Bug Fixes:

 * Possible loss of sync and bad reception of stop bit on slow baud rates fixed.
   Problem reported by Kenny.Tung.
 * Bad (or lack of ) loopback handling fixed. Reported by Cherry Withers.

Improvements:

 * Made FIFO's as general inferrable memory where possible. 
   So on FPGA they should be inferred as RAM (Distributed RAM on Xilinx).
   This saves about 1/3 of the Slice count and reduces P&R and synthesis times.
 * Added optional baudrate output (baud_o). 
   This is identical to BAUDOUT* signal on 16550 chip. 
   It outputs 16xbit_clock_rate - the divided clock.
   It's disabled by default. Define UART_HAS_BAUDRATE_OUTPUT to use.

.. Note::

    The uart_defines.v file is no longer included in the source files.
    So keep this in mind when doing simulation. Add it manually.
    I've done this, so that you could you your own define files for
    different configurations. I need this for the IrDA core I develop.
    You can just uncomment the \`includes if you want the old behaviour.
    The uart_fifo.v file is no longer used. Intead uart_rfifo.v and uart_tfifo.v
    file are now present. Also raminfr.v in the new inferred ram module.

Check the new core and I hope you'll like it.

10.08.2001
^^^^^^^^^^

* Modified naming of top signals and defines to be unique and easy to integrate
* Changed the directory structure of the core to new structure as described in OpenCores 
  coding guidelines. !!!
* Fixed (I hope) the detection of break condition  
* Added top level parameters for data width and address line width

23.06.2001
^^^^^^^^^^

* With the help of Bob Kirstein another two bugs were fixed:
  1. Trasmitter was sending stop bit two 16xclock cycle slonger than needed.
  2. Receiver was losing 1 16xclock cycle on each character and went out of sync.
* Major change: 
  I have modified the divisor latch register to be 16-bit long instead of 32 as I thought was
  necessary for higher speed systems. Thanks to Rick Wright for pointing this out.
  So now, DL3 and DL4 register bytes are not used.
  Documentation is updated to follow this change.
* Note that more than 1 stop bit in a byte i snot implemented.

02.05.2001
^^^^^^^^^^

* Fixed transmitter and receiver - the start and the stop bits were sent and received complemented.
  Big thanks go to Bob Kirstein for pointing this out to me.

31.05.2001
^^^^^^^^^^

* Minor changes in register reading code
* Changed FCR to be 2 bits wide (reset bits are not needed) and instead enabled the rx_reset and tx_reset
  signals which I forgot to implement.
* Changed defines for FCR.
* Cleaned ports that were not connected in top-level.
* Changed the code to have only one FIFO module instead of two to overcome versioning problem on the cost of
  some additional gate count. UART_RX_FIFO was modified a little and renamed to UART_FIFO.
* UART_RX_FIFO.v and UART_TX_FIFO.v files removed from the project.
* Changes to receiver and transmitter modules concerning FIFO handling.
* Commented out \`include "UART_defines" in all files but UART_top.v and test bench.
* Modified test bench a little for a little better check.

29.05.2001
^^^^^^^^^^

* Fixed: Line Control Register block didn't have wb_rst_i in its sensitivity list
* Fixed: Modem Status Register block didn't have wb_rst_i in its sensitivity list and didn't set reset value
* Fixed rf_pop, lsr_mask, msi_reset and threi_clear not being synthesizable in release 1.7. (Thanks 
  to Pavel Korenski for pointing this to me)

27.05.2001
^^^^^^^^^^

Thanks to Rick Wright for pointing me many of my bugs.

* Fixed the rf_pop and lsr_mask flags not being deasserted.
* Fixed Time-Out interrupt not being masked by bit 0 in IER
* Fixed interrupt logic not being masked by IER
* Fixed bit 0 (interrupt pending) of IIR being set incorrectly
* Fixed Modem Status Register bits 3:0 handling (didn't work as should have)
* Fixed modem status interrupt to be related to bits [3:0] (deltas) instead of the bits 7:4 of MSR.
  This way the interrupt is cleared upon reading from the MSR.
* Fixed THRE interrupt not being reset by reading IIR
* Changed Receiver and Transmitter FIFO, so that they do not use the FIFO_inc.v file because of problems
  with #include command.
* Removed FIFO_inc.v from CVS tree.
* Updated specifications .pdf file

Design Verificaiton
-------------------

Following files are making an UART16550 PHY and are used for testing:

+--------------------------+--------------------------------------------------------------------+
| uart_device_if_defines.v | defines related to PHY                                             |
+--------------------------+--------------------------------------------------------------------+
| uart_device_if_memory.v  | Module for initializing PHY (reading commands from vapi.log file)  |
+--------------------------+--------------------------------------------------------------------+
| uart_device_if.v         | Uart PHY with additional feature for testing                       |
+--------------------------+--------------------------------------------------------------------+
| vapi.log                 | File with commands (expected data, data to be send, etc.)          |
+--------------------------+--------------------------------------------------------------------+




OPERATION:

uart_device_if.v is a uart PHY and connects to the uart_top.v. PHY takes commands from vapi.log
file. Depending on command it can:

- set a mode (5, 6, 7, 8-bit, parity, stop bits, etc.)
- set a frequency divider (dll)
- send a character
- receive a character and compare it to the expected one
- send a glitch (after a certain period of time)
- send a break 
- detect a break
- Check if fifo is empty/not empty (and generate an error if expected value differs from actual)
- delay (does nothing for certain number of characters)

On the other side of uart some kind of host must be connected that controls the phy.

This is the structure::


 ||||||||||||||              ||||||||||||||||              ||||||||||||||||
 |            |              |              |              |              |
 |   Host     | <----------> |    UART      | <----------> |     PHY      | 
 |            |              |              |              |              |
 ||||||||||||||              ||||||||||||||||              ||||||||||||||||
 
 
PHY must know how host sets th UART and work in the same mode. Besides that it must know what
host is sending or expecting to receive. Operation of the PHY must be written in the vapi.log
file.

When I was using this testing environment, I used OpenRISC1200 as a host. Everything is fully
operational. UART was also tested in hardware (on two different boards), running uCLinux in
both, interrupt and polling mode.
